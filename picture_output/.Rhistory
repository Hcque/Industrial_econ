attach(mtcars)
plot(wt, mpg)
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, type = "b")
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, type = "a")
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, type = "c")
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, type = "d")
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, type = "b")
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, type = "b")
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
par(pch = 17, cex = 1.2, lty = 2, lwd = 2)
attach(mtcars)
plot(wt, mpg, pch = 17, cex = 1.2, lty = 2, lwd = 2)
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, pch = 17, cex = 4, lty = 2, lwd = 2)
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, pch = 17, cex = 1, lty = 3, lwd = 2)
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, pch = 16, cex = 1, lty = 5, lwd = 2)
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, pch = 16, cex = 1, lty = 1, lwd = 2)
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
attach(mtcars)
plot(wt, mpg, pch = 16, cex = 1, lty = 1, lwd = 2)
abline(lm(mpg ~ wt))
title("Redression of ")
detach(mtcars)
library("RColorBrewer", lib.loc="C:/Program Files/R/R-3.4.1/library")
n <- 7
myc <- brewer.pal(n, "set1")
barplot(rep(1, n), colour = myc)
rainbow(10)
n <- 7
myc <- rainbow(n)
pie(rep(1, n), labels = myc, col = myc)
pie(rep(1, n), labels = myc, col = myc)
myg <- gray(0: n/n)
pie(rep(1, n), labels = myg, col = myg)
opar <- par(no.readonly = TRUE)
par(pin = c(4,3), mai = c(1, 0.5, 1, 0.2))
par(opar)
axis(2, at = x, labels = x, col.axls = 2, las = 2)
x <- 1:10
axis(2, at = x, labels = x, col.axls = 2, las = 2)
axis(2, at = x, labels = x, col.axls = "red", las = 2)
axis(2, at = x, labels = x, col.axis = 2, las = 2)
axis(2, at = x, labels = x, col.axis = 2, las = 2)
axis(2, at = x, labels = x, col.axis = 2, las = 2)
axis(2, at = x, labels = x, col.axis = 2, las = 2)
library("vcd", lib.loc="C:/Program Files/R/R-3.4.1/library")
getwd()
options()
library("reshape", lib.loc="C:/Program Files/R/R-3.4.1/library")
detach("package:reshape", unload=TRUE)
exp(1)
exp(0.306)
?round
library("Hmisc", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("car", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("gclus", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("hexbin", lib.loc="C:/Program Files/R/R-3.4.1/library")
detach("package:hexbin", unload=TRUE)
library("scatterplot3d", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("rgl", lib.loc="C:/Program Files/R/R-3.4.1/library")
detach("package:rgl", unload=TRUE)
library("Rcmdr", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("Hmisc", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("psych", lib.loc="C:/Program Files/R/R-3.4.1/library")
head(mtcars)
library("psych", lib.loc="C:/Program Files/R/R-3.4.1/library")
describe(mtcars)
describe.by(mtcars)
library("gmodels", lib.loc="C:/Program Files/R/R-3.4.1/library")
Titanic
?ftable()
?ftable(Titanic)
ftable(Titanic)
library("vcd", lib.loc="C:/Program Files/R/R-3.4.1/library")
mosaic(~Class + Sex + Age + Survived, data = Titanic,
shade = TRUE, legend = TRUE)
library("car", lib.loc="C:/Program Files/R/R-3.4.1/library")
scatterplot(weight ~ height, data = women,
spread = FALSE, lty.smooth = 2,
pch = 19,
main = "M",
xlab = "x",ylab = "y")
scatterplot(weight ~ height, data = women,
spread = FALSE, lty.smooth = 5,
pch = 19,
main = "M",
xlab = "x",ylab = "y")
warnings()
states <- as.data.frame(state.x77[,c("Murder", "Population",
"Illiteracy", "Income", "Frost")])
cor(states)
library("car", lib.loc="C:/Program Files/R/R-3.4.1/library")
scatterplotMatrix(states, spread = FALSE, lty.smooth = 2,
main = "M")
myfit3 <- lm(Murder ~ Population + Illiteracy +Income + Frost,
data = "states")
summary(myfit3)
myfit3 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = states)
summary(myfit3)
library("effects", lib.loc="C:/Program Files/R/R-3.4.1/library")
myfit3 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = states)
confint(myfit3)
myfit <- lm(weight ~ height, data = women)
par(mflow = c(2, 2))
plot(myfit)
stimulate = TRUE, main = "Q-Q PLOT")
do1 <- Journals[,c("subs","price")]
crPlots(myfit3)
ncvTest(myfit3)
library("gvlma", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("gvlma", lib.loc="C:/Program Files/R/R-3.4.1/library")
gvmodel <- gvlma(myfit3)
summary(gvmodel)
vif(fit)
vif(myfit3)
influencePlot(myfit3, id.method = "identify",
main = "M",
sub = "S")
myfit3.1 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
myfit3.1 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = states)
myfit3.2 <- lm(Murder ~ Population + Illiteracy,
data = states)
anova(myfit3.2, myfit3.1)
do1 <- Journals[,c("subs","price")]
do2 <- Journals$price/Journals$citations
anova(myfit3.2, myfit3.1)
myfit3.1 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = states)
myfit3.2 <- lm(Murder ~ Population + Illiteracy,
data = states)
anova(myfit3.2, myfit3.1)
library("leaps", lib.loc="C:/Program Files/R/R-3.4.1/library")
library("leaps", lib.loc="C:/Program Files/R/R-3.4.1/library")
leaps <- regsubsets(Murder ~ Population + Illiteracy + Income + Frost,
data = states, nbest = 4)
plot(leaps, scale = "adjr2")
library("pwr", lib.loc="C:/Program Files/R/R-3.4.1/library")
coeftest
?coeftest
coeftest()
install.packages(c("chron", "curl", "FactoMineR"))
install.packages("rJava")
install.packages(np)
set.seed(1410)
dsmall <- diamonds[sample(nrow(diamonds),100),]
library(ggplot2)
set.seed(1410)
dsmall <- diamonds[sample(nrow(diamonds),100),]
qplot(carat, price, data = dsmall, colour = color)
qplot(carat, price, data = dsmall, colour = "red")
qplot(carat, price, data = dsmall, colour =I("red"))
qplot(carat, price, data = dsmall, colour = "red")
qplot(carat, price, data = dsmall, colour = "blue")
qplot(carat, price, data = dsmall, colour =I("steelblue"))
qplot(carat, price, data = dsmall, geom = "smooth")
qplot(carat, price, data = dsmall, geom = "smooth", se = FALSE)
qplot(carat, price, data = dsmall, geom = "smooth",span = 0.8)
qplot(carat, price, data = dsmall, geom = "smooth",span = 0.1)
qplot(carat, price, data = dsmall, geom = "smooth",
method = "gam", formula = y ~ s(x))
qplot(carat, price, data = dsmall, geom = "smooth",
method = "lm", formula = y ~ ns(x, 5))
library(splines)
qplot(carat, price, data = dsmall, geom = "smooth",
method = "lm", formula = y ~ ns(x, 5))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
library(splines)
qplot(carat, price, data = dsmall, geom = "smooth",
method = "lm", formula = y ~ ns(x, 5))
qplot(carat, price, data = dsmall, geom = "jitter")
qplot(carat, price, data = dsmall, geom = "point")
qplot(carat, price, data = dsmall, geom = "boxplot")
qplot(carat, price, data = dsmall, geom = "jitter", colour = "steelbule")
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelbule"))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue")
shape = 20)
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = 20)
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(20))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(21))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(22))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(23))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(24))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(15))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(14))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(14))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(16))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(17))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(18))
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(19))
qplot(carat, data = dsmall, geom = "histogram")
qplot(carat, data = dsmall, geom = "density")
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2)
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2, fill = color)
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2,
fill = I(k))
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2,
fill = I(blue))
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2,
fill = I("blue"))
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2,
fill = I("steelblue"))
qplot(carat, data = dsmall, geom = "density", adjust = 3)
qplot(carat, data = dsmall, geom = "density", adjust = 3, colour = colour)
qplot(carat, data = dsmall, geom = "density", adjust = 3, colour = color)
qplot(carat, data = dsmall, geom = "bar")
qplot(date, unemploy, data = economics, geom = "line")
qplot(unemploy/ pop, uempmed, data = economics, geom = c("point", "path"))
year <- function(x) as.POSIXlt(x)$year + 1900
qplot(unemploy/ pop, uempmed, data = economics, geom = c("point", "path"), colour = year(date))
p <- ggplot(Oxboys, aes(age, height, group = Subject)) + geom_line()
data(Oxboys)
qplot(carat, price, data = dsmall, facets = color ~ .,
geom = "jitter")
qplot(carat, ..density.., data = dsmall, facets = color ~ .,
geom = "jitter")
state.x77
str(state.x77)
#multiple regression
s <- as.data.frame(statex.77[, c("Murder", "Population",
"Illiteracy", "Income","Frost")])
cor(s)
library(car)
scatterplotMatrix(s, spread = FALSE, lty.smooth = 2,
main = "Scatter Plot Matrix")
s <- as.data.frame(statex.77[, c("Murder", "Population",
"Illiteracy", "Income","Frost")])
#multiple regression
s <- as.data.frame(state.x77[, c("Murder", "Population",
"Illiteracy", "Income","Frost")])
cor(s)
cor(s)
library(car)
scatterplotMatrix(s, spread = FALSE, lty.smooth = 2,
main = "Scatter Plot Matrix")
s2 <- mtcars[c(1,3,5,6)]
s2c <- abs(cor(s2))
s2c
cor(s2)
library(gclus)
s2 <- mtcars[c(1,3,5,6)]
s2c <- abs(cor(s2))
mc <- dmat.color(s2c)
mo <- order.single(s2c)
cpairs(s2,
mo,
panel.colors = mc,
gap = 0.5,
main = "Variables Ordered and Colored by Correlation")
pairs( ~ mpg + disp + drat + wt, data = mtcars,
main = "Basic Scatter Plot Matrix")
library(gclus)
s2 <- mtcars[c(1,3,5,6)]
s2c <- abs(cor(s2))
mc <- dmat.color(s2c)
cpairs(s2,
mo,
panel.colors = mc,
gap = 0.5,
main = "Variables Ordered and Colored by Correlation")
mo <- order.single(s2c)
pairs( ~ mpg + disp + drat + wt, data = mtcars,
main = "Basic Scatter Plot Matrix")
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, data = diamonds, geom = "density", adjust = 0.1)
qplot(carat, data = diamonds, geom = "histogram", binwidth = 0.1,
xlim = c(0, 3))
qplot(carat, data = diamonds, geom = "histogram", fill = color)
qplot(carat, data = diamonds, facets = color ~ .,
geom = "histogram", binwidth = 0.1)
library(ggplot2)
set.seed(1410)
dsmall <- diamonds[sample(nrow(diamonds),100),]
qplot(carat, price, data = diamonds, alpha = I(1/10))
qplot(carat, price, data = dsmall, colour = color)
qplot(carat, price, data = dsmall, shape = cut)
qplot(carat, price, data = dsmall, colour = "blue")
qplot(carat, price, data = dsmall, colour =I("steelblue"))
qplot(carat, price, data = dsmall, geom = "smooth", se = FALSE)
qplot(carat, price, data = dsmall, geom = "smooth",span = 0.1)
library(mgcv)
qplot(carat, price, data = dsmall, geom = "smooth",
method = "gam", formula = y ~ s(x))
library(splines)
qplot(carat, price, data = dsmall, geom = "smooth",
method = "lm", formula = y ~ ns(x, 5))
qplot(carat, price, data = dsmall, geom = "jitter")
qplot(carat, price, data = dsmall, geom = "boxplot")
qplot(carat, price, data = dsmall, geom = "jitter", colour = I("steelblue"),
shape = I(19))
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2,
fill = color)
qplot(carat, data = dsmall, geom = "histogram", binwidth = 0.2,
fill = I("steelblue"))
qplot(carat, data = dsmall, geom = "density", adjust = 3, colour = color)
qplot(carat, data = dsmall, geom = "bar")
qplot(date, unemploy, data = economics, geom = "line")
qplot(unemploy/ pop, uempmed, data = economics, geom = c("point", "path"))
year <- function(x) as.POSIXlt(x)$year + 1900
qplot(unemploy/ pop, uempmed, data = economics, geom = c("point", "path"), colour = year(date))
p <- ggplot(Oxboys, aes(age, height, group = Subject)) + geom_line()
qplot(carat, price, data = dsmall, facets = color ~ .,
geom = "jitter")
qplot(carat, ..density.., data = dsmall, facets = color ~ .,
geom = "jitter")
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, data = diamonds, geom = "density", adjust = 0.1)
qplot(carat, data = diamonds, geom = "histogram", binwidth = 0.1,
xlim = c(0, 3))
qplot(carat, data = diamonds, geom = "histogram", fill = color)
qplot(carat, data = diamonds, facets = color ~ .,
geom = "histogram", binwidth = 0.1)
library(car)
scatterplot(weight ~ height, data = women,
spread = FALSE, lty.smooth = 2,
pch = 19,
main = "M",
xlab = "x",ylab = "y")
library(effects)
plot(effect("hp : wt", fit,
list(wt = c(2,3,4))),
multiline = TRUE)
fit <- lm(mpg ~ hp + wt + hp:wt, data = mtcars)
library(effects)
plot(effect("hp : wt", fit,
list(wt = c(2,3,4))),
multiline = TRUE)
fit <- lm(mpg ~ hp + wt + hp:wt, data = mtcars)
fit
library(effects)
plot(effect("hp:wt", fit,
list(wt = c(2,3,4))),
multiline = TRUE)
plot(effect("hp:wt", fit,
list(wt = c(2.2,3.2,4.2))),
multiline = TRUE)
fit <- lm(mpg ~ hp + wt + hp:wt, data = mtcars)
library(effects)
plot(effect("hp:wt", fit,
list(wt = c(2.2,3.2,4.2))),
multiline = TRUE)
myfit3 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = states)
data("States")
myfit3 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = states)
s <- as.data.frame(state.x77[, c("Murder", "Population",
"Illiteracy", "Income","Frost")])
myfit3 <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = s)
confint(myfit3)
confint(myfit3)
library(car)
mfit <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = s)
qqplot(mfit, labels = row.names(s), id.method = "identify",
simulate = TRUE, main = "QQ Plot")
mfit <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = s)
qqplot(mfit, labels = row.names(s), id.method = "identify",
simulate = TRUE, main = "QQ Plot")
s
qqplot(mfit, labels = row.names(s), id.method = "identify",
simulate = TRUE, main = "QQ Plot")
qqplot(mfit, labels = row.names(s))
qqPlot(mfit, labels = row.names(s), id.method = "identify",
simulate = TRUE, main = "QQ Plot")
durbinWatsonTest(mfit)
crPlots(mfit)
ncvTest(mfit)
spreadLevelPlot(mfit)
vif(mfit)
sqrt(vif(mfit)) > 2
vif(mfit)
outlierTest(mfit)
influencePlot(mfit, id.method = "identify",
main = "Influence Plot",
sub = "Circle size")
library(gclus)
library(leaps)
l <- regsubsets(Murder ~ Population + Illiteracy + Income +
Frost, data = s, nbest = 4)
plot(l, scale = "adjr2")
#or
library(car)
subset(l, statistic = "cp",
main = "Cp Plot")
abline(1,1, lty = 2, col = 1)
ncvTest(mfit)
spreadLevelPlot(mfit)
library(odfWeave)
library(car)
scatterplotMatrix(s, spread = FALSE, lty.smooth = 2,
main = "Scatter Plot Matrix")
library(car)
mfit <- lm(Murder ~ Population + Illiteracy + Income + Frost,
data = s)
qqPlot(mfit, labels = row.names(s), id.method = "identify",
simulate = TRUE, main = "QQ Plot")
install.packages(sweave)
install.packages("sweave")
install.packages(sweave)
install.packages("odfWeave")
install.packages(Sweave)
install.packages("Sweave")
install.packages(kintr)
install.packages("kintr")
install.packages("kintr", type = source)
install.packages("Sweave", type = source)
install.packages("pgfSweave")
library(installr)
updateR()
library(installr)
updateR()
install.packages(c("data.table", "irlba", "OpenMx", "purrr", "Rcmdr", "RcppArmadillo", "rJava", "rpf", "tidyr", "tidyselect"))
library(sandwich)
data("PublicSchools")
summary(PublicSchools)
PublicSchools
ps <- na.omit(PublicSchools)
ps <- na.omit(PublicSchools)
ps$Income <- ps$Income / 10000
plot(Expenditure ~ Income, data = ps, ylim = c(230, 830))
psl <- lm(Expenditure ~ Income, data = ps)
abline(psl)
plot(psl, which = 1:6)
plot(psl)
pshat <- hatvalues(psl)
plot(pshat)
abline(h = c(1, 3) * mean(pshat), col = 2)
influence.measures(psl)
influence.measures(psl)
library(lmtest)
bptest(psl)
setwd("G:/R/10.16")
d <- read.csv("21.csv")
library(ggplot2)
d$save_q <- cut_interval(d$save, n = 3)
p <- qplot(agricu.1, save, data = d,size = population)
p + facet_wrap(~ save_q, ncol = 1)
d$save_q <- cut_interval(d$save, n = 2)
p <- qplot(agricu.1, save, data = d,size = population)
p + facet_wrap(~ save_q, ncol = 1)
d$save_q <- cut_number(d$save, n = 6)
p <- qplot(agricu.1, save, data = d,size = population)
p + facet_wrap(~ save_q, ncol = 1)
d$save_q <- cut_number(d$save, n = 2)
p <- qplot(agricu.1, save, data = d,size = population)
p + facet_wrap(~ save_q, ncol = 1)
d$save_q <- cut_number(d$save, n = 3)
p <- qplot(agricu.1, save, data = d,size = population)
p + facet_wrap(~ save_q, ncol = 1)
